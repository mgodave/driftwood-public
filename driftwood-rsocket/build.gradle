plugins {
    id "com.google.protobuf" version "${protobufPluginVersion}"
    id "java-library"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf:0.3.0'
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                rsocketRpc { }
            }
        }
    }
}

jar {
    exclude("com/google/protobuf/**")
    exclude("google/protobuf/**")
}

test {
    useJUnitPlatform()
}

dependencies {
    api project(":driftwood-api")
    api project(":driftwood-client")
    api "com.google.guava:guava"
    api "io.rsocket:rsocket-core"
    api "io.projectreactor:reactor-core"
    api "io.rsocket.rpc:rsocket-rpc-core"

    implementation project(":driftwood-proto")
    implementation project(":driftwood-core")
    implementation "io.micrometer:micrometer-core"
    implementation "io.rsocket:rsocket-micrometer"
    implementation "org.slf4j:slf4j-api"

    protobuf project(":driftwood-proto")

    testImplementation project(":driftwood-test")
    testImplementation "org.mockito:mockito-core"
    testImplementation "io.projectreactor:reactor-test"
    testImplementation "io.rsocket:rsocket-test"
    testImplementation "io.rsocket:rsocket-transport-local"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.vintage:junit-vintage-engine"
}
